@page "/users"
@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage

<h3>Manage Users</h3>

@if (isLoading)
{
    <div class="d-flex flex-column justify-content-center align-items-center vh-75">
        <p class="loading-data-text">Loading users...</p>
    </div>
}
else if (users.Count == 0)
{
    <div class="d-flex flex-column justify-content-center align-items-center vh-75">
        <p class="no-data-available-text">No users found.</p>
    </div>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Employee ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Created On</th>
                <th>Modified On</th>
                <th><!-- Actions column Leave Empty! --></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.EmployeeId</td>
                    <td>@user.Name</td>
                    <td>@user.Email</td>
                    <td>@user.Role</td>
                    <td>@user.CreatedOn</td>
                    <td>@user.ModifiedOn</td>
                    <td>
                        <div class="dropdown">
                            <button class="btn btn-link p-0 actions-dropdown-btn" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
                                    <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"/>
                                </svg>
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="padding: 0;">
                                <li>
                                    <button class="dropdown-item d-flex align-items-center rounded-top action-button" @onclick="() => ShowEditModal(user.EmployeeId)">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square me-2" viewBox="0 0 16 16">
                                            <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                                            <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z"/>
                                        </svg>
                                        <span>Edit</span>
                                    </button>
                                </li>
                                <li>
                                    <button class="dropdown-item text-danger d-flex align-items-center rounded-bottom action-button" @onclick="() => ShowDeleteModal(user.EmployeeId)">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash me-2" viewBox="0 0 16 16">
                                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
                                            <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
                                        </svg>
                                        <span>Delete</span>
                                    </button>
                                </li>
                            </ul>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<button class="btn mt-3 d-flex align-items-center" @onclick="ShowRegisterUserModal">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-plus-fill" viewBox="0 0 16 16">
    <path d="M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6"/>
    <path fill-rule="evenodd" d="M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5"/>
    </svg>
    Add New User
</button>

<RegisterUserModal @ref="registerUserModal" OnSuccess="LoadUsers" />

<EditUserModal @ref="editUserModal" OnSubmitSuccess="LoadUsers" />

@code {
    private List<PersonBase> users = new();
    private bool isLoading = true;
    private RegisterUserModal registerUserModal = default!;
    private EditUserModal editUserModal = default!;
    private string? userRole;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        isLoading = true;
        try
        {
            var client = ClientFactory.CreateClient("BackendAPI");
            var response = await client.GetFromJsonAsync<List<PersonBase>>("api/People");
            if (response != null)
            {
                users = response;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading users: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ShowRegisterUserModal()
    {
        registerUserModal.ShowModal();
    }

    private async Task ShowEditModal(string employeeId)
    {
        await editUserModal.ShowModal(employeeId);
    }

    private void ShowDeleteModal(string employeeId)
    {
        // Logic to open delete confirmation modal
    }
}
