@page "/register"

@inject IHttpClientFactory ClientFactory

<h2>Register</h2>

<EditForm Model="@registerModel" OnValidSubmit="@HandleRegister" FormName="registerForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Full Name</label>
        <InputText id="name" class="form-control" @bind-Value="registerModel.name" />
    </div>

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="registerModel.email" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" type="password" @bind-Value="registerModel.password" />
    </div>

    <div class="form-group">
        <label for="role">Role (Employee or Manager)</label>
        <InputSelect id="role" class="form-control" @bind-Value="registerModel.role">
            <option value="">Select a role</option>
            <option value="Employee">Employee</option>
            <option value="Manager">Manager</option>
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-secondary">Register</button>
</EditForm>

@if (message != null)
{
    <div class="alert @messageClass">
        @message
    </div>
}

@code {
    private string? message;
    private string messageClass = string.Empty;

    private Backend.Models.EmployeeDTO registerModel = new Backend.Models.EmployeeDTO();

    private async Task HandleRegister()
    {
        try
        {
            var client = ClientFactory.CreateClient("BackendAPI");

            var response = await client.PostAsJsonAsync("api/People", registerModel);

            if (response.IsSuccessStatusCode)
            {
                message = "Registration successful!";
                messageClass = "alert-success";
            }
            else
            {
                message = "Registration failed!";
                messageClass = "alert-danger";
            }
        }
        catch (Exception ex)
        {
            message = $"Error: {ex.Message}";
            messageClass = "alert-danger";
        }
    }
}

