@inherits LayoutComponentBase

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <!-- Notification Button with Dropdown, toggled via a checkbox -->
            <div class="header-sign d-flex align-items-center gap-3">

                <NavLink class="add-new d-flex align-items-center" href="/new-waste-report" Match="NavLinkMatch.All">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16"/>
                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"/>
                    </svg>
                    New Waste Report
                </NavLink>

                <input type="checkbox" id="dropdownCheckbox" class="navbar-toggler" />

                <!-- Label for the checkbox to toggle it -->
                <label for="dropdownCheckbox" class="button-md position-relative" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-bell-fill" viewBox="0 0 16 16">
                        <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2m.995-14.901a1 1 0 1 0-1.99 0A5 5 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901"/>
                    </svg>
                    <!-- Red dot indicating notifications -->
                    @if (notifications.Count > 0)
                    {
                        <span class="position-absolute translate-middle p-1 bg-danger border border-light rounded-circle">
                            <span class="visually-hidden">New alerts</span>
                        </span>
                    }
                </label>

                <!-- Notification Dropdown -->
                <ul class="dropdown-list">
                    @if (notifications.Count > 0)
                    {
                        @foreach (var notification in notifications)
                        {
                            <li class="dropdown-item notification-item">
                                @notification
                            </li>
                        }
                        <!-- Clear All Button -->
                        <button class="btn btn-danger" @onclick="ClearAllNotifications">Clear All Notifications</button>
                    }
                    else
                    {
                        <li class="dropdown-item text-muted">No notifications</li>
                    }
                </ul>
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    // List of notifications
    private List<string> notifications = new List<string> {
        "New waste report generated.",
        "Sustainability goal met!",
        "Maintenance scheduled for 2024-10-18."
    };

    // Clear all notifications
    private void ClearAllNotifications()
    {
        notifications.Clear();
    }
}
