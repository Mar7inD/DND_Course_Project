@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]


<CascadingValue Value="EmployeeId">
    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>

        <main>
            <div class="top-row px-4">
                <div class="header-sign d-flex align-items-center gap-3">
                    <button class="btn btn-link add-new d-flex align-items-center" @onclick="ShowNewWasteReportModal">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                        </svg>
                        New Waste Report
                    </button>
                    <!-- User Profile Dropdown -->
                    <UserProfileDropdown />
                </div>
            </div>

            <article class="content px-4">
                @Body
            </article>
        </main>
    </div>
</CascadingValue>

<!-- New Waste Report Modal -->
<NewWasteReportModal @ref="newWasteReportModal" OnSubmitSuccess="RefreshPage" />


@code {
    private NewWasteReportModal newWasteReportModal = default!;
    [CascadingParameter] public string? EmployeeId { get; private set; }

    private void RefreshPage()
    {
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    private async Task ShowNewWasteReportModal()
    {
        await newWasteReportModal.ShowModal();
    }
}

